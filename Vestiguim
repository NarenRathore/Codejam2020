Problem:
Vestigium means "trace" in Latin. In this problem we work with Latin squares and matrix traces.
The trace of a square matrix is the sum of the values on the main diagonal (which runs from the upper left to the lower right).
An N-by-N square matrix is a Latin square if each cell contains one of N different values, and no value is repeated within a row or
a column. In this problem, we will deal only with "natural Latin squares" in which the N values are the integers between 1 and N.

Given a matrix that contains only integers between 1 and N, we want to compute its trace and check whether it is a natural Latin square.
To give some additional information, instead of simply telling us whether the matrix is a natural Latin square or not, please compute 
the number of rows and the number of columns that contain repeated values.




SOLUTION:

T=int(input())
n=[]
matrix=[]
for i in range(T):
    matrix.append([])
    n.append(int(input()))
    for j in range(n[i]):
        matrix[i].append(list(map(int, input().split(" ")))) 
i=0
def column(mat):
    col1 = 0
    result = [[mat[j][i] for j in range(len(mat))] for i in range(len(mat[0]))]
    for r in result:
        if len(r)-len(set(r))>0:
            col1=col1+1
    return col1

for mat in matrix:
    row=0
    dia=sum(mat[j][j] for j in range(len(mat)))
    for r in mat:
        if len(r)-len(set(r))>0:
            row=row+1
    col=column(mat)
    i=i+1
    print("Case #{}: {} {} {}".format(i,dia,row,col))
